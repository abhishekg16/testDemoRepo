{
  "metainfo" : {
    "id" : "1",
    "language" : "scala",
    "fabricId" : "1",
    "frontEndLanguage" : "scala",
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "codeMode" : "sparse",
    "buildSystem" : "maven"
  },
  "connections" : [ ],
  "processes" : {
    "Source_31885" : {
      "id" : "Source_31885",
      "component" : "Source",
      "metadata" : {
        "label" : "Source_0",
        "slug" : "source_0",
        "x" : 431,
        "y" : 85,
        "language" : "scala",
        "phase" : 0
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "34904",
          "slug" : "out",
          "schema" : {
            "type" : "struct",
            "fields" : [ ]
          }
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "format" : "jdbc",
        "datasetTypes" : [ {
          "label" : "FILE",
          "value" : "File",
          "icon" : "File"
        }, {
          "label" : "WAREHOUSE",
          "value" : "Warehouse",
          "icon" : "File"
        }, {
          "label" : "CATALOG TABLE",
          "value" : "Database",
          "icon" : "Database"
        } ],
        "dataFormats" : [ {
          "label" : "JDBC",
          "value" : "jdbc",
          "icon" : "File"
        } ],
        "datasetId" : "271",
        "dataset" : {
          "textPassword" : null,
          "lowerBound" : null,
          "writeMode" : null,
          "partitionColumn" : null,
          "query" : null,
          "readFromSource" : "dbtable",
          "credentialScope" : "rds_secret",
          "upperBound" : null,
          "schema" : {
            "type" : "struct",
            "fields" : [ ]
          },
          "driver" : "",
          "jdbcUrl" : "jdbc:postgresql://test-database.cqu6jg6pmsfo.us-east-1.rds.amazonaws.com/asp",
          "dbtable" : "aspect",
          "credentialPassword" : null,
          "textUsername" : null,
          "numPartitions" : null,
          "credType" : "databricksSecrets"
        },
        "isNewDataset" : false,
        "datasetType" : "Warehouse"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ]
  }
}